/*
  Carousel structure as follows:
    div#carousel
    -    width of container, height dictated by height of tallest image
    -    make sure that either....images are the same height, or somehow center align them
      div.item-container
      -    items live here, have the same padding/border/background/whatever
      -    all floated left
      div.controls
      -    Control items, however it works etc



*/
/*
  Get the number of items, at each step, slide left until out of viewport, then translate
  to end of row
*/
// @include slideAnimation(5, 600, 400);
@mixin animationSettings($items, $duration) {
  animation-duration: $items * $duration;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

@mixin slideAnimation($items, $duration, $slideWidth, $slideMargin) {

  /**
  * Keyframes operate like so:
  * 1. Slide all items to the left
  * 2. Make leftmost item transparent (Quick as possible)
  * 3. Move leftmost item to far right (quick as possible)
  * 4. Make rightmost item opaque (quick as possible)
  */

  // Use 1% for the quick as possible movements. This number can change as necessary.
  $movementKeyframeSize: 1;
  // Percentage of the total time the item moves
  $slideMovementPercent: 100 / $items / 3;
  // Percentage of the total time the item is stationary
  $slideStillPercent: 100 / $items / 3 * 2;
  // Total slide width
  $totalSlideWidth: $slideWidth + $slideMargin * 2;

  @for $slideNum from 1 through $items {
    // Create animation for each item in the carousel
    @keyframes slide-#{$slideNum} {
      $leftPosition: ($slideNum - 1) * ($totalSlideWidth);
      // Set the last slide position to the left of the first slide
      @if ($slideNum == $items) {
        $leftPosition: -1 * $totalSlideWidth;
      }
      // Starting and Ending Locations
      0%, 100% {
        // exclude the px on 0
        @if ($leftPosition == 0) {
          left: $leftPosition;
        } @else {
          left: $leftPosition + px;
        }
      }

      @for $itemNum from 1 through $items {
        //@if ($itemNum == $items and $slideNum != $items) {
        //  // This makes the transition only happen on the last slide
        //  // Otherwise the percents are all messy
        //} @else {
        $movementKeyframe: ($slideMovementPercent * ($itemNum - 1)) + ($slideStillPercent * $itemNum);
        // Handle transition to the right
        // If $leftposition is negative, move to far right => last item start position
        @if ($leftPosition < 0) {
          // 2 - Make item transparent
          #{$movementKeyframe + ($movementKeyframeSize) * 1%} {
            left: $leftPosition + px;
            opacity: 0;
          }
          // 3 - make item left all the way to the end (last item start position)
          #{$movementKeyframe + ($movementKeyframeSize * 5) * 1%} {
            $leftPosition: ($items - 1) * $totalSlideWidth;
            opacity: 0;
            left: $leftPosition + px;
          }
          // 4 - make item visible
          #{$movementKeyframe + ($movementKeyframeSize * 10) * 1%} {
            opacity: 1;
          }
        }
          // If it doesn't have to move, make sure that it stays at the current position while the
          // slide that is moving is done moving
        @else {
          #{$movementKeyframe * 1%} {
            @if ($leftPosition == 0) {
              left: $leftPosition;
            } @else {
              left: $leftPosition + px;
            }
          }
        }
        // Move slide to the left
        #{ $movementKeyframe + $slideMovementPercent * 1%} {
          $leftPosition: $leftPosition -  $totalSlideWidth;
          @if ($leftPosition == 0) {
            left: $leftPosition;
          } @else {
            left: $leftPosition + px;
          }
          opacity: 1;
        }
      }

    }
  }
}

//}

@mixin roundabout($items, $viewportWidth, $viewportHeight, $duration, $slideWidth, $slideMargin: 0) {
  @include slideAnimation($items: $items, $duration: $duration, $slideWidth: $slideWidth, $slideMargin: $slideMargin);
  width: $viewportWidth + px;
  position: relative;
  overflow: hidden;
  height: $viewportHeight + px;
  margin: 0 auto;
  .roundabout-slides {
    $width: $items * ($slideWidth + $slideMargin * 2) + px; // get number of items and desired item width in mixin
    position: relative;
    width: $width;
    height: 100%;
    //left: -1 * $width / 2;
  }
  .roundabout-slide {
    box-sizing: border-box;
    width: $slideWidth + px;
    height: $viewportHeight + px;
    margin: 0 $slideMargin;
    padding: 10px;
    display: inline-block;
    top: 0;
    position: absolute;
    text-align: center;
  }
  .roundabout-slide img {
    height: 100%;
  }
  .roundabout-slides:hover {
    .roundabout-slide {
      animation-play-state: paused;
    }
  }

  // Create slide selectors
  @for $itemNum from 1 through $items {
    .roundabout-slide:nth-child(#{$itemNum}) {
      @if ($itemNum == $items) {
        left: -1 * ($slideWidth + $slideMargin * 2) + px;
      } @else {
        left: ($itemNum - 1) * ($slideWidth + $slideMargin * 2) + px;
      }
      animation-name: slide-#{$itemNum};
      @include animationSettings($items, $duration);
    }
  }

}

#roundabout {
  @include roundabout($items: 3, $viewportWidth: 600, $viewportHeight: 250, $duration: 5s, $slideWidth: 600);
}